import React, { useState, useEffect, useRef } from "react";
import { Box, Typography, Paper, TextField, Button, IconButton, Tooltip, Table, TableHead, TableRow, TableCell, TableBody } from "@mui/material";
import { FaChevronDown, FaChevronRight } from "react-icons/fa";
import { motion, AnimatePresence } from "framer-motion";
import { Link } from "react-router-dom";
import html2pdf from "html2pdf.js";

const bimSections = [
  {
    title: "üìÅ BIM 360 / ACC: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–æ–¥–µ–ª–µ–π",
    content: (
      <>
        –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è <strong>Workshared Cloud Models</strong>, —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Revit ‚ûî "Save to Cloud".  
        –î–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ API –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã:
        <ul>
          <li>üìÑ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–∞—Ö: <code>/metadata</code></li>
          <li>üìÑ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤: <code>/metadata/{"{guid}"}/properties</code></li>
          <li>üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: <code>/metadata/{"{guid}"}</code></li>
        </ul>
        <strong>–í–∞–∂–Ω–æ:</strong> –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–¥–µ–ª–∞–Ω–∞ —á–µ—Ä–µ–∑ <em>Publish Latest</em> –≤ Revit.
      </>
    ),
    backgroundColor: "#e3f2fd",
  },
  {
    title: "üß© BIM 360 / ACC: –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
    content: (
      <>
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è API <strong>Activity Stream</strong>:
        <ul>
          <li>‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Revit ‚ûî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ç—É—Å—ã –≤ API</li>
          <li>‚ö†Ô∏è –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Docs ‚ûî —Ç–æ–ª—å–∫–æ —Ñ–∏–∫—Å–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
        </ul>
      </>
    ),
    backgroundColor: "#e8f5e9",
  },
  {
    title: "üìë –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ PDF",
    content: (
      <>
        –ü—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
        <ul>
          <li>üåç –†–∞–∑–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö</li>
          <li>üß† –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç</li>
          <li>üèôÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∫–∞—Ä—Ç—ã</li>
        </ul>
      </>
    ),
    backgroundColor: "#fff3e0",
  },
  {
    title: "üöÄ –†–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
    content: (
      <>
        <strong>–í–µ—Ä—Å–∏—è 1:</strong> –ò–∑—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã APS –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.<br />
        <strong>–í–µ—Ä—Å–∏—è 2:</strong> –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ backend (FastAPI) –∏ frontend (React), —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.<br />
        <strong>–í–µ—Ä—Å–∏—è 3:</strong> –ß–∞—Ç-–±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ BIM –ø—Ä–æ–µ–∫—Ç–æ–≤, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ AI –Ω–∞ PyTorch.
      </>
    ),
    backgroundColor: "#ede7f6",
  },
];

const fullstackSection = {
  title: "üíª Fullstack –ü—Ä–æ–µ–∫—Ç: —Å–∞–π—Ç –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
  content: (
    <>
      <Typography variant="h6" gutterBottom>üîπ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</Typography>
      <ul>
        <li>Backend: <strong>FastAPI</strong> + <strong>SQLite</strong></li>
        <li>Frontend: <strong>React.js</strong> + <strong>Material UI</strong> + <strong>Framer Motion</strong></li>
        <li>PDF-—Ä–µ–∑—é–º–µ: <Link to="/about">–°—Ç—Ä–∞–Ω–∏—Ü–∞ "–û–±–æ –º–Ω–µ"</Link> (—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—é–º–µ –≤ PDF)</li>
        <li>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: Autodesk Platform Services (APS)</li>
      </ul>

      <Typography variant="h6" gutterBottom sx={{ mt: 3 }}>üîπ –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞:</Typography>
      <ul>
        <li><Link to="/">üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (Home)</Link> ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–æ–≤—ã–µ –∏–¥–µ–∏</li>
        <li><Link to="/about">üôã –°—Ç—Ä–∞–Ω–∏—Ü–∞ "–û–±–æ –º–Ω–µ"</Link> ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ PDF-—Ä–µ–∑—é–º–µ</li>
        <li><Link to="/project/map">üó∫Ô∏è –ö–∞—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤</Link> ‚Äî –∫–∞—Ä—Ç–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤</li>
        <li><Link to="/project/projects-table">üìÇ –§–∞–π–ª—ã –∏ –≤–µ—Ä—Å–∏–∏ Revit</Link> ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π</li>
        <li><Link to="/project/elements-table">üìë –≠–ª–µ–º–µ–Ω—Ç—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</Link> ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥–µ–ª–µ–π</li>
        <li><Link to="/project/ai-assistant">ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</Link> ‚Äî —á–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤</li>
      </ul>
    </>
  ),
  backgroundColor: "#f1f8e9",
};

const databaseTablesSection = {
  title: "üó∫Ô∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
  content: (
    <Box sx={{ mt: 2 }}>
      <Typography variant="h6" gutterBottom>üîπ –¢–∞–±–ª–∏—Ü–∞ rvt_files</Typography>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–ª–µ</TableCell>
            <TableCell>–¢–∏–ø</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow><TableCell>id</TableCell><TableCell>INTEGER (PK)</TableCell></TableRow>
          <TableRow><TableCell>project_id</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>file_name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>file_id</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>version_number</TableCell><TableCell>INTEGER</TableCell></TableRow>
          <TableRow><TableCell>version_id</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>urn</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>last_modified_time</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>last_modified_user</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>published_time</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>published_user</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>process_state</TableCell><TableCell>TEXT</TableCell></TableRow>
        </TableBody>
      </Table>

      <Typography variant="h6" gutterBottom sx={{ mt: 4 }}>üîπ –¢–∞–±–ª–∏—Ü–∞ views</Typography>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–ª–µ</TableCell>
            <TableCell>–¢–∏–ø</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow><TableCell>id</TableCell><TableCell>INTEGER (PK)</TableCell></TableRow>
          <TableRow><TableCell>view_key</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>project_name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>file_name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>version_number</TableCell><TableCell>INTEGER</TableCell></TableRow>
          <TableRow><TableCell>view_name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>guid</TableCell><TableCell>TEXT</TableCell></TableRow>
        </TableBody>
      </Table>

      <Typography variant="h6" gutterBottom sx={{ mt: 4 }}>üîπ –¢–∞–±–ª–∏—Ü–∞ elements</Typography>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–ª–µ</TableCell>
            <TableCell>–¢–∏–ø</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow><TableCell>id</TableCell><TableCell>INTEGER (PK)</TableCell></TableRow>
          <TableRow><TableCell>view_id</TableCell><TableCell>INTEGER (FK ‚Üí views.id)</TableCell></TableRow>
          <TableRow><TableCell>object_id</TableCell><TableCell>INTEGER</TableCell></TableRow>
          <TableRow><TableCell>name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>raw_json</TableCell><TableCell>TEXT</TableCell></TableRow>
        </TableBody>
      </Table>

      <Typography variant="h6" gutterBottom sx={{ mt: 4 }}>üîπ –¢–∞–±–ª–∏—Ü–∞ properties</Typography>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–ª–µ</TableCell>
            <TableCell>–¢–∏–ø</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow><TableCell>id</TableCell><TableCell>INTEGER (PK)</TableCell></TableRow>
          <TableRow><TableCell>view_id</TableCell><TableCell>INTEGER (FK ‚Üí views.id)</TableCell></TableRow>
          <TableRow><TableCell>object_id</TableCell><TableCell>INTEGER</TableCell></TableRow>
          <TableRow><TableCell>raw_json</TableCell><TableCell>TEXT</TableCell></TableRow>
        </TableBody>
      </Table>

      <Typography variant="h6" gutterBottom sx={{ mt: 4 }}>üîπ –¢–∞–±–ª–∏—Ü–∞ project_coordinates</Typography>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>–ü–æ–ª–µ</TableCell>
            <TableCell>–¢–∏–ø</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow><TableCell>id</TableCell><TableCell>INTEGER (PK)</TableCell></TableRow>
          <TableRow><TableCell>project_name</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>north_south</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>east_west</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>elevation</TableCell><TableCell>TEXT</TableCell></TableRow>
          <TableRow><TableCell>angle_to_true_north</TableCell><TableCell>TEXT</TableCell></TableRow>
        </TableBody>
      </Table>
    </Box>
  ),
  backgroundColor: "#fff8e1",
};


const Home = () => {
  const [ideas, setIdeas] = useState({
    technicalCurrent: "",
    technicalFuture: "",
    companyCurrent: "",
    companyFuture: "",
    clientCurrent: "",
    clientFuture: "",
  });
  
  
  const [openIndex, setOpenIndex] = useState(null);
  const ideasRef = useRef();

  useEffect(() => {
    const savedIdeas = localStorage.getItem("project_ideas");
    if (savedIdeas) {
      setIdeas(JSON.parse(savedIdeas));
    }
  }, []);
  

  const saveIdeasAsPDF = () => {
    if (ideasRef.current) {
      const ideasText = `
        üîπ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è ‚Äî —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏:
        ${ideas.techCurrent || "‚Äî"}
        
        üîπ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è ‚Äî –Ω–æ–≤—ã–µ –∏–¥–µ–∏:
        ${ideas.techFuture || "‚Äî"}
  
        üîπ –†–µ—à–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ–∏—Ä–º—ã ‚Äî —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏:
        ${ideas.companyCurrent || "‚Äî"}
  
        üîπ –†–µ—à–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ–∏—Ä–º—ã ‚Äî –Ω–æ–≤—ã–µ –∏–¥–µ–∏:
        ${ideas.companyFuture || "‚Äî"}
  
        üîπ –ò–¥–µ–∏ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚Äî —Ç–µ–∫—É—â–∏–µ:
        ${ideas.clientCurrent || "‚Äî"}
  
        üîπ –ò–¥–µ–∏ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚Äî –Ω–æ–≤—ã–µ:
        ${ideas.clientFuture || "‚Äî"}
      `;
  
      const element = document.createElement("div");
      element.innerText = ideasText;
      html2pdf().from(element).save("My_Project_Ideas.pdf");
    }
  };
  
  
  

  const toggleSection = (index) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <Box sx={{ maxWidth: "1200px", margin: "0 auto", py: 5 }}>
      <Typography variant="h3" align="center" color="primary" gutterBottom>
        üõ†Ô∏è –û –ø—Ä–æ–µ–∫—Ç–µ
      </Typography>

      {[...bimSections, fullstackSection, databaseTablesSection].map((section, index) => (
        <Paper
          key={index}
          elevation={4}
          sx={{
            backgroundColor: section.backgroundColor,
            mb: 4,
            borderRadius: 3,
            p: 2,
            cursor: "pointer"
          }}
          onClick={() => toggleSection(index)}
        >
          <Box display="flex" alignItems="center">
            <Typography variant="h5" sx={{ flexGrow: 1 }}>
              {section.title}
            </Typography>
            <IconButton>
              {openIndex === index ? <FaChevronDown /> : <FaChevronRight />}
            </IconButton>
          </Box>

          <AnimatePresence>
            {openIndex === index && (
              <motion.div
                initial={{ opacity: 0, height: 0 }}
                animate={{ opacity: 1, height: "auto" }}
                exit={{ opacity: 0, height: 0 }}
                transition={{ duration: 0.5 }}
                style={{ overflow: "hidden" }}
              >
                <Box mt={2}>
                  {section.content}
                </Box>
              </motion.div>
            )}
          </AnimatePresence>
        </Paper>
      ))}

          {/* üí° –ë–ª–æ–∫ –¥–ª—è –∏–¥–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <Paper elevation={2} sx={{ p: 4, backgroundColor: "#fffde7", borderRadius: 3, mt: 6 }}>
        <Typography variant="h5" gutterBottom>üí° –ò–¥–µ–∏ —Ä–∞–∑–≤–∏—Ç–∏—è</Typography>
        <Box ref={ideasRef}>
            {/* üîπ 1. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã */}
            <Typography variant="h5" gutterBottom sx={{ mt: 4 }}>1. üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã</Typography>

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏:</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏..."
              value={ideas.techCurrent}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, techCurrent: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
              sx={{ mb: 3 }}
            />

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ù–æ–≤—ã–µ –∏–¥–µ–∏ (–±—É–¥—É—â–µ–µ):</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–∏ –Ω–∞ –±—É–¥—É—â–µ–µ..."
              value={ideas.techFuture}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, techFuture: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
              sx={{ mb: 5 }}
            />

            {/* üîπ 2. –†–µ—à–µ–Ω–∏—è –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ */}
            <Typography variant="h5" gutterBottom sx={{ mt: 4 }}>2. ü§ù –†–µ—à–µ–Ω–∏—è –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏</Typography>

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏:</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏..."
              value={ideas.companyCurrent}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, companyCurrent: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
              sx={{ mb: 3 }}
            />

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ù–æ–≤—ã–µ –∏–¥–µ–∏ (–±—É–¥—É—â–µ–µ):</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç—ã..."
              value={ideas.companyFuture}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, companyFuture: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
              sx={{ mb: 5 }}
            />

            {/* üîπ 3. –†–µ—à–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
            <Typography variant="h5" gutterBottom sx={{ mt: 4 }}>3. üåç –†–µ—à–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</Typography>

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏:</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ –∏–¥–µ–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤..."
              value={ideas.clientCurrent}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, clientCurrent: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
              sx={{ mb: 3 }}
            />

            <Typography variant="subtitle1" gutterBottom>‚Ä¢ –ù–æ–≤—ã–µ –∏–¥–µ–∏ (–±—É–¥—É—â–µ–µ):</Typography>
            <TextField
              fullWidth
              multiline
              rows={4}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏..."
              value={ideas.clientFuture}
              onChange={(e) => {
                const updatedIdeas = { ...ideas, clientFuture: e.target.value };
                setIdeas(updatedIdeas);
                localStorage.setItem("project_ideas", JSON.stringify(updatedIdeas));
              }}
            />
          </Box>


        <Button variant="contained" color="success" sx={{ mt: 4 }} onClick={saveIdeasAsPDF}>
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∏–¥–µ–∏ –≤ PDF
        </Button>
      </Paper>

    </Box>
  );
};

export default Home;
